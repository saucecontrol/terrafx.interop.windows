// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

// Ported from um/MLOperatorAuthor.h in the Windows SDK for Windows 10.0.19041.0
// Original source is Copyright © Microsoft. All rights reserved.

using System;
using System.Runtime.InteropServices;

namespace TerraFX.Interop
{
    public static unsafe partial class Windows
    {
        [DllImport("Windows.AI.MachineLearning.dll", CallingConvention = CallingConvention.StdCall, ExactSpelling = true)]
        [return: NativeTypeName("HRESULT")]
        public static extern int MLCreateOperatorRegistry([NativeTypeName("IMLOperatorRegistry **")] IMLOperatorRegistry** registry);

        public static readonly Guid IID_IMLOperatorAttributes = new Guid(0x4B1B1759, 0xEC40, 0x466C, 0xAA, 0xB4, 0xBE, 0xB5, 0x34, 0x7F, 0xD2, 0x4C);

        public static readonly Guid IID_IMLOperatorTensorShapeDescription = new Guid(0xF20E8CBE, 0x3B28, 0x4248, 0xBE, 0x95, 0xF9, 0x6F, 0xBC, 0x6E, 0x46, 0x43);

        public static readonly Guid IID_IMLOperatorKernelCreationContext = new Guid(0x5459B53D, 0xA0FC, 0x4665, 0xAD, 0xDD, 0x70, 0x17, 0x1E, 0xF7, 0xE6, 0x31);

        public static readonly Guid IID_IMLOperatorTensor = new Guid(0x7FE41F41, 0xF430, 0x440E, 0xAE, 0xCE, 0x54, 0x41, 0x6D, 0xC8, 0xB9, 0xDB);

        public static readonly Guid IID_IMLOperatorKernelContext = new Guid(0x82536A28, 0xF022, 0x4769, 0x9D, 0x3F, 0x8B, 0x27, 0x8F, 0x84, 0xC0, 0xC3);

        public static readonly Guid IID_IMLOperatorKernel = new Guid(0x11C4B4A0, 0xB467, 0x4EAA, 0xA1, 0xA6, 0xB9, 0x61, 0xD8, 0xD0, 0xED, 0x79);

        public static readonly Guid IID_IMLOperatorShapeInferenceContext = new Guid(0x105B6B29, 0x5408, 0x4A68, 0x99, 0x59, 0x09, 0xB5, 0x95, 0x5A, 0x34, 0x92);

        public static readonly Guid IID_IMLOperatorTypeInferenceContext = new Guid(0xEC893BB1, 0xF938, 0x427B, 0x84, 0x88, 0xC8, 0xDC, 0xF7, 0x75, 0xF1, 0x38);

        public static readonly Guid IID_IMLOperatorTypeInferrer = new Guid(0x781AEB48, 0x9BCB, 0x4797, 0xBF, 0x77, 0x8B, 0xF4, 0x55, 0x21, 0x7B, 0xEB);

        public static readonly Guid IID_IMLOperatorShapeInferrer = new Guid(0x540BE5BE, 0xA6C9, 0x40EE, 0x83, 0xF6, 0xD2, 0xB8, 0xB4, 0x0A, 0x77, 0x98);

        public static readonly Guid IID_IMLOperatorKernelFactory = new Guid(0xEF15AD6F, 0x0DC9, 0x4908, 0xAB, 0x35, 0xA5, 0x75, 0xA3, 0x0D, 0xFB, 0xF8);

        public static readonly Guid IID_IMLOperatorRegistry = new Guid(0x2AF9DD2D, 0xB516, 0x4672, 0x9A, 0xB5, 0x53, 0x0C, 0x20, 0x84, 0x93, 0xAD);
    }
}
